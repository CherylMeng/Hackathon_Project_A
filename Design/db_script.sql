CREATE SEQUENCE SQL_PROCUREMENT_USER_ID;

CREATE SEQUENCE SQL_PROCUREMENT_USER_INFO_ID;

CREATE SEQUENCE SQL_PROCUREMENT_CATALOG_ID;

CREATE SEQUENCE SQL_PROCUREMENT_PRICE_ID;

CREATE SEQUENCE SQL_PROCUREMENT_OFFICE_DEPOT_ID;

CREATE SEQUENCE SQL_PROCUREMENT_SKU_ID;

CREATE SEQUENCE SQL_PROCUREMENT_ORDER_ID;

CREATE SEQUENCE SQL_PROCUREMENT_ORDER_ITEM_ID;

CREATE SEQUENCE SQL_PROCUREMENT_TO_DO_LIST_ITEM_ID;

CREATE SEQUENCE SQL_PROCUREMENT_NOTIFICATIONM_ID;

CREATE TABLE USER_ROLE(
  ROLE_ID NUMBER,
  ROLE_NAME VARCHAR2(20),
  CONSTRAINT PK_USER_ROLE PRIMARY KEY (ROLE_ID)
);

INSERT INTO USER_ROLE(ROLE_ID, ROLE_NAME) VALUES (1, 'Administrator');
INSERT INTO USER_ROLE(ROLE_ID, ROLE_NAME) VALUES (2, 'Requestor');
INSERT INTO USER_ROLE(ROLE_ID, ROLE_NAME) VALUES (3, 'Manager');
INSERT INTO USER_ROLE(ROLE_ID, ROLE_NAME) VALUES (4, 'Supplier');

CREATE TABLE USER_STATUS(
  STATUS_ID NUMBER,
  STATUS_NAME VARCHAR(20),
  CONSTRAINT PK_USER_STATUS PRIMARY KEY (STATUS_ID)
);
INSERT INTO USER_STATUS(STATUS_ID, STATUS_NAME) VALUES (1, 'CREATED');
INSERT INTO USER_STATUS(STATUS_ID, STATUS_NAME) VALUES (2, 'APPROVED');
INSERT INTO USER_STATUS(STATUS_ID, STATUS_NAME) VALUES (3, 'REFUSED');
INSERT INTO USER_STATUS(STATUS_ID, STATUS_NAME) VALUES (4, 'ENABLED');
INSERT INTO USER_STATUS(STATUS_ID, STATUS_NAME) VALUES (5, 'DISABLED');
INSERT INTO USER_STATUS(STATUS_ID, STATUS_NAME) VALUES (6, 'DELETED');

CREATE TABLE USERS(
  USER_ID NUMBER,
  ROLE_ID NUMBER,
  NAME VARCHAR(50),
  MANAGER_ID NUMBER,
  STATUS NUMBER,
  CREATED_TIME TIMESTAMP DEFAULT systimestamp,
  APPROVED_TIME TIMESTAMP,
  ENABLED_TIME TIMESTAMP,
  DISABLED_TIME TIMESTAMP,
  DELETED_TIME TIMESTAMP,
  CONSTRAINT PK_USER PRIMARY KEY (USER_ID),
  CONSTRAINT FK_USER_ROLE FOREIGN KEY (ROLE_ID) REFERENCES USER_ROLE(ROLE_ID),
  CONSTRAINT FK_USER_MANAGER FOREIGN KEY (MANAGER_ID) REFERENCES USERS(USER_ID),
  CONSTRAINT FK_USER_STATUS FOREIGN KEY (STATUS) REFERENCES USER_STATUS(STATUS_ID)
);

CREATE TABLE USER_INFO_TYPE(
  TYPE_ID NUMBER,
  ROLE_ID NUMBER,
  TYPE_NAME VARCHAR(30),
  DISPLAY_NAME VARCHAR(30),
  DISPLAY_ORDER NUMBER,
  IS_MANDATORY VARCHAR(1),
  CONSTRAINT PK_USER_INFO_TYPE PRIMARY KEY (TYPE_ID),
  CONSTRAINT FK_USER_INFO_TYPE_ROLE FOREIGN KEY (ROLE_ID) REFERENCES USER_ROLE(ROLE_ID)
);

INSERT INTO USER_INFO_TYPE(TYPE_ID, ROLE_ID, TYPE_NAME, DISPLAY_NAME, DISPLAY_ORDER, IS_MANDATORY) VALUES (1, 2, 'FirstName', 'First Name', 0, 1);
INSERT INTO USER_INFO_TYPE(TYPE_ID, ROLE_ID, TYPE_NAME, DISPLAY_NAME, DISPLAY_ORDER, IS_MANDATORY) VALUES (2, 2, 'LastName', 'Last Name', 1, 1);
INSERT INTO USER_INFO_TYPE(TYPE_ID, ROLE_ID, TYPE_NAME, DISPLAY_NAME, DISPLAY_ORDER, IS_MANDATORY) VALUES (3, 2, 'Department', 'Department', 2, 1);
INSERT INTO USER_INFO_TYPE(TYPE_ID, ROLE_ID, TYPE_NAME, DISPLAY_NAME, DISPLAY_ORDER, IS_MANDATORY) VALUES (4, 2, 'Site', 'Site', 3, 1);
INSERT INTO USER_INFO_TYPE(TYPE_ID, ROLE_ID, TYPE_NAME, DISPLAY_NAME, DISPLAY_ORDER, IS_MANDATORY) VALUES (5, 2, 'Address', 'Address', 4, 1);
INSERT INTO USER_INFO_TYPE(TYPE_ID, ROLE_ID, TYPE_NAME, DISPLAY_NAME, DISPLAY_ORDER, IS_MANDATORY) VALUES (6, 2, 'RequestorPhone', 'Tel.', 5, 1);
INSERT INTO USER_INFO_TYPE(TYPE_ID, ROLE_ID, TYPE_NAME, DISPLAY_NAME, DISPLAY_ORDER, IS_MANDATORY) VALUES (7, 4, 'SupplierName', 'Supplier Name', 0, 1);
INSERT INTO USER_INFO_TYPE(TYPE_ID, ROLE_ID, TYPE_NAME, DISPLAY_NAME, DISPLAY_ORDER, IS_MANDATORY) VALUES (8, 4, 'RegistryID', 'Registry ID', 1, 1);
INSERT INTO USER_INFO_TYPE(TYPE_ID, ROLE_ID, TYPE_NAME, DISPLAY_NAME, DISPLAY_ORDER, IS_MANDATORY) VALUES (9, 4, 'Location', 'Location', 2, 1);
INSERT INTO USER_INFO_TYPE(TYPE_ID, ROLE_ID, TYPE_NAME, DISPLAY_NAME, DISPLAY_ORDER, IS_MANDATORY) VALUES (10, 4, 'SupplierPhone', 'Tel.', 3, 1);

CREATE TABLE USER_INFO(
  USER_INFO_ID NUMBER,
  USET_ID NUMBER,
  USER_INFO_TYPE NUMBER,
  USER_INFO_VALUE VARCHAR(100),
  CONSTRAINT PK_USER_INFO PRIMARY KEY (USER_INFO_ID),
  CONSTRAINT FK_USER_INFO_USERS FOREIGN KEY (USET_ID) REFERENCES USERS(USER_ID),
  CONSTRAINT FK_USER_INFO_USER_INFO_TYPE FOREIGN KEY (USER_INFO_TYPE) REFERENCES USER_INFO_TYPE(TYPE_ID)
);

CREATE TABLE CATALOG(
  CATALOG_ID NUMBER,
  PARENT_CATALOG NUMBER,
  CATALOG_DEPTH NUMBER,
  CATALOG_NAME VARCHAR(50),
  IS_DELETED NUMBER(1),
  CONSTRAINT PK_CATALOG PRIMARY KEY (CATALOG_ID),
  CONSTRAINT FK_PARENT_CATALOG FOREIGN KEY (PARENT_CATALOG) REFERENCES CATALOG(CATALOG_ID)
);

CREATE TABLE CURRENCY_TYPE(
  CURRENCY_ID NUMBER,
  CURRENCY_NAME VARCHAR(20),
  CURRENCY_SYMBOL VARCHAR(5),
  CURRENCY_EXCHANGE NUMBER(10,5),
  CONSTRAINT PK_CURRENCY_TYPE PRIMARY KEY (CURRENCY_ID)
);

INSERT INTO CURRENCY_TYPE(CURRENCY_ID, CURRENCY_NAME, CURRENCY_SYMBOL, CURRENCY_EXCHANGE) VALUES (1, 'RMB', '￥', 1.0000);
INSERT INTO CURRENCY_TYPE(CURRENCY_ID, CURRENCY_NAME, CURRENCY_SYMBOL, CURRENCY_EXCHANGE) VALUES (2, 'USD', '＄', 6.887);
INSERT INTO CURRENCY_TYPE(CURRENCY_ID, CURRENCY_NAME, CURRENCY_SYMBOL, CURRENCY_EXCHANGE) VALUES (3, 'JPY', 'J￥', 0.06189);
INSERT INTO CURRENCY_TYPE(CURRENCY_ID, CURRENCY_NAME, CURRENCY_SYMBOL, CURRENCY_EXCHANGE) VALUES (4, 'EUR', '€', 7.3925);
INSERT INTO CURRENCY_TYPE(CURRENCY_ID, CURRENCY_NAME, CURRENCY_SYMBOL, CURRENCY_EXCHANGE) VALUES (5, 'GBP', '￡', 8.6088);
INSERT INTO CURRENCY_TYPE(CURRENCY_ID, CURRENCY_NAME, CURRENCY_SYMBOL, CURRENCY_EXCHANGE) VALUES (6, 'CHF', 'CHF', 6.914);
INSERT INTO CURRENCY_TYPE(CURRENCY_ID, CURRENCY_NAME, CURRENCY_SYMBOL, CURRENCY_EXCHANGE) VALUES (7, 'CAD', 'C＄', 5.1833);
INSERT INTO CURRENCY_TYPE(CURRENCY_ID, CURRENCY_NAME, CURRENCY_SYMBOL, CURRENCY_EXCHANGE) VALUES (8, 'AUD', 'A＄', 5.2823);
INSERT INTO CURRENCY_TYPE(CURRENCY_ID, CURRENCY_NAME, CURRENCY_SYMBOL, CURRENCY_EXCHANGE) VALUES (9, 'HKD', 'HK＄', 0.8862);
INSERT INTO CURRENCY_TYPE(CURRENCY_ID, CURRENCY_NAME, CURRENCY_SYMBOL, CURRENCY_EXCHANGE) VALUES (10, 'NZD', 'N＄', 4.8436);
INSERT INTO CURRENCY_TYPE(CURRENCY_ID, CURRENCY_NAME, CURRENCY_SYMBOL, CURRENCY_EXCHANGE) VALUES (11, 'RUB', 'RUB', 0.1229);
INSERT INTO CURRENCY_TYPE(CURRENCY_ID, CURRENCY_NAME, CURRENCY_SYMBOL, CURRENCY_EXCHANGE) VALUES (12, 'KRW', '￦', 0.00618);
INSERT INTO CURRENCY_TYPE(CURRENCY_ID, CURRENCY_NAME, CURRENCY_SYMBOL, CURRENCY_EXCHANGE) VALUES (13, 'THB', '฿', 0.2002);

CREATE TABLE PRICE(
  PRICE_ID NUMBER,
  PRICE_VALUE NUMBER(20,2),
  CURRENCY_ID NUMBER,
  CONSTRAINT PK_PRICE PRIMARY KEY (PRICE_ID),
  CONSTRAINT FK_PRICE_CURRENCY_TYPE FOREIGN KEY (CURRENCY_ID) REFERENCES CURRENCY_TYPE(CURRENCY_ID)
);

CREATE TABLE SKU_TYPE(
  SKU_ID NUMBER,
  SKU_NAME VARCHAR(50),
  IS_MANDATORY VARCHAR(1),
  CONSTRAINT PK_SKU_TYPE PRIMARY KEY (SKU_ID)
);

INSERT INTO SKU_TYPE(SKU_ID, SKU_NAME, IS_MANDATORY) VALUES (1, 'Brand', 1);
INSERT INTO SKU_TYPE(SKU_ID, SKU_NAME, IS_MANDATORY) VALUES (2, 'Name', 1);
INSERT INTO SKU_TYPE(SKU_ID, SKU_NAME, IS_MANDATORY) VALUES (3, 'Price', 1);
INSERT INTO SKU_TYPE(SKU_ID, SKU_NAME, IS_MANDATORY) VALUES (4, 'Model', 0);
INSERT INTO SKU_TYPE(SKU_ID, SKU_NAME, IS_MANDATORY) VALUES (5, 'Configuration', 0);
INSERT INTO SKU_TYPE(SKU_ID, SKU_NAME, IS_MANDATORY) VALUES (6, 'Level', 0);
INSERT INTO SKU_TYPE(SKU_ID, SKU_NAME, IS_MANDATORY) VALUES (7, 'Color', 0);
INSERT INTO SKU_TYPE(SKU_ID, SKU_NAME, IS_MANDATORY) VALUES (8, 'Packing Size', 0);
INSERT INTO SKU_TYPE(SKU_ID, SKU_NAME, IS_MANDATORY) VALUES (9, 'Unit', 0);
INSERT INTO SKU_TYPE(SKU_ID, SKU_NAME, IS_MANDATORY) VALUES (10, 'Production Date', 0);
INSERT INTO SKU_TYPE(SKU_ID, SKU_NAME, IS_MANDATORY) VALUES (11, 'Expiring Date', 0);
INSERT INTO SKU_TYPE(SKU_ID, SKU_NAME, IS_MANDATORY) VALUES (12, 'Guarantee Period', 0);
INSERT INTO SKU_TYPE(SKU_ID, SKU_NAME, IS_MANDATORY) VALUES (13, 'Usage', 0);
INSERT INTO SKU_TYPE(SKU_ID, SKU_NAME, IS_MANDATORY) VALUES (14, 'Manufacturer', 0);


CREATE TABLE OFFICE_DEPOT(
  ITEM_ID NUMBER,
  CATALOG_ID NUMBER,
  SUPPLIER_ID NUMBER,
  IS_DELETED NUMBER(1),
  CONSTRAINT PK_OFFICE_DEPOT PRIMARY KEY (ITEM_ID),
  CONSTRAINT FK_OFFICE_DEPOT_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG(CATALOG_ID),
  CONSTRAINT FK_OFFICE_DEPOT_SUPPLIER FOREIGN KEY (SUPPLIER_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE SKU(
  SKU_ID NUMBER,
  OFFICE_DEPOT_ID NUMBER,
  SKU_TYPE_ID NUMBER,
  SKU_VALUE VARCHAR(100),
  IS_DELETED NUMBER(1),
  CONSTRAINT PK_SKU PRIMARY KEY (SKU_ID),
  CONSTRAINT FK_SKU_OFFICE_DEPOT FOREIGN KEY (OFFICE_DEPOT_ID) REFERENCES OFFICE_DEPOT(ITEM_ID),
  CONSTRAINT FK_SKU_SKU_TYPE FOREIGN KEY (SKU_TYPE_ID) REFERENCES SKU_TYPE(SKU_ID)
);

CREATE TABLE ORDER_STATUS(
  STATUS_ID NUMBER,
  SATUS_NAME VARCHAR(20),
  CONSTRAINT PK_ORDER_STATUS PRIMARY KEY (STATUS_ID)
);

INSERT INTO ORDER_STATUS(STATUS_ID, SATUS_NAME) VALUES (1, 'Saved');
INSERT INTO ORDER_STATUS(STATUS_ID, SATUS_NAME) VALUES (2, 'Submitted');
INSERT INTO ORDER_STATUS(STATUS_ID, SATUS_NAME) VALUES (3, 'Approved');
INSERT INTO ORDER_STATUS(STATUS_ID, SATUS_NAME) VALUES (4, 'Processing');
INSERT INTO ORDER_STATUS(STATUS_ID, SATUS_NAME) VALUES (5, 'Completed');
INSERT INTO ORDER_STATUS(STATUS_ID, SATUS_NAME) VALUES (6, 'Deleted');
INSERT INTO ORDER_STATUS(STATUS_ID, SATUS_NAME) VALUES (7, 'Refused');
INSERT INTO ORDER_STATUS(STATUS_ID, SATUS_NAME) VALUES (8, 'Canceled');

CREATE TABLE ORDER_TYPE(
  TYPE_ID NUMBER,
  TYPE_NAME VARCHAR(50),
  CONSTRAINT PK_ORDER_TYPE PRIMARY KEY (TYPE_ID)
);

INSERT INTO ORDER_TYPE(TYPE_ID, TYPE_NAME) VALUES (1, 'Standard PO');
INSERT INTO ORDER_TYPE(TYPE_ID, TYPE_NAME) VALUES (2, 'Blanket PA');
INSERT INTO ORDER_TYPE(TYPE_ID, TYPE_NAME) VALUES (3, 'Contract PA');
INSERT INTO ORDER_TYPE(TYPE_ID, TYPE_NAME) VALUES (4, 'Planned PO');

CREATE TABLE ORDERS(
  ORDER_ID NUMBER,
  ORDER_TYPE NUMBER,
  ORDER_STATUS NUMBER,
  PRICE_ID NUMBER,
  CREATE_TIME TIMESTAMP DEFAULT systimestamp,
  SUBMIT_TIME TIMESTAMP,
  APPROVE_TIME TIMESTAMP,
  PROCESS_TIME TIMESTAMP,
  COMPLETE_TIME TIMESTAMP,
  DELETE_TIME TIMESTAMP,
  REFUSE_TIME TIMESTAMP,
  CONSTRAINT PK_ORDER PRIMARY KEY (ORDER_ID),
  CONSTRAINT FK_ORDERS_ORDER_TYPE FOREIGN KEY (ORDER_TYPE) REFERENCES ORDER_TYPE(TYPE_ID),
  CONSTRAINT FK_ORDERS_ORDER_STATUS FOREIGN KEY (ORDER_STATUS) REFERENCES ORDER_STATUS(STATUS_ID),
  CONSTRAINT FK_ORDERS_PRICE FOREIGN KEY (PRICE_ID) REFERENCES PRICE(PRICE_ID)
);

CREATE TABLE ORDER_ITEM(
  ORDER_ID NUMBER,
  OFFICE_DEPOT_ID NUMBER,
  AMOUNT NUMBER,
  DISCOUNT NUMBER(1,2),
  CONSTRAINT PK_ORDER_ITEM PRIMARY KEY (ORDER_ID, OFFICE_DEPOT_ID),
  CONSTRAINT FK_ORDER_ITEM_ORDER_ID FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID)
  --CONSTRAINT FK_ORDER_ITEM_OFFICE_DEPOT FOREIGN KEY (OFFICE_DEPOT_ID) REFERENCES OFFICE_DEPOT(ITEM_ID)
);

CREATE TABLE INITIAL_STATE_TYPE(
  TYPE_ID NUMBER,
  TYPE_NAME VARCHAR(20),
  CONSTRAINT PK_INITIAL_STATE_TYPE PRIMARY KEY (TYPE_ID)
);

INSERT INTO INITIAL_STATE_TYPE(TYPE_ID, TYPE_NAME) VALUES (1, 'Submitted');
INSERT INTO INITIAL_STATE_TYPE(TYPE_ID, TYPE_NAME) VALUES (2, 'Approved');
INSERT INTO INITIAL_STATE_TYPE(TYPE_ID, TYPE_NAME) VALUES (3, 'Refused');
INSERT INTO INITIAL_STATE_TYPE(TYPE_ID, TYPE_NAME) VALUES (4, 'Enabled');
INSERT INTO INITIAL_STATE_TYPE(TYPE_ID, TYPE_NAME) VALUES (5, 'Disabled');
INSERT INTO INITIAL_STATE_TYPE(TYPE_ID, TYPE_NAME) VALUES (6, 'Processing');
INSERT INTO INITIAL_STATE_TYPE(TYPE_ID, TYPE_NAME) VALUES (7, 'Completed');
INSERT INTO INITIAL_STATE_TYPE(TYPE_ID, TYPE_NAME) VALUES (8, 'Saved');
INSERT INTO INITIAL_STATE_TYPE(TYPE_ID, TYPE_NAME) VALUES (9, 'Canceled');

CREATE TABLE MANAGEMENT_TYPE(
  TYPE_ID NUMBER,
  TYPE_NAME VARCHAR(20),
  CONSTRAINT PK_MANAGEMENT_TYPE PRIMARY KEY (TYPE_ID)
);

INSERT INTO MANAGEMENT_TYPE(TYPE_ID, TYPE_NAME) VALUES (1, 'Account');
INSERT INTO MANAGEMENT_TYPE(TYPE_ID, TYPE_NAME) VALUES (2, 'Order');
INSERT INTO MANAGEMENT_TYPE(TYPE_ID, TYPE_NAME) VALUES (3, 'OfficeDepot');

CREATE TABLE TO_DO_LIST_TYPE(
  TYPE_ID NUMBER,
  ROLE_ID NUMBER,
  OWNER_ROLE_ID NUMBER,
  MANAGEMENT_ID NUMBER,
  CONSTRAINT PK_TO_DO_LIST_TYPE PRIMARY KEY (TYPE_ID),
  CONSTRAINT FK_TO_DO_LIST_TYPE_USER_ROLE FOREIGN KEY (ROLE_ID) REFERENCES USER_ROLE(ROLE_ID),
  CONSTRAINT FK_TO_DO_LIST_TYPE_OWNER_ROLE FOREIGN KEY (OWNER_ROLE_ID) REFERENCES USER_ROLE(ROLE_ID),
  CONSTRAINT FK_TO_DO_LIST_TYPE_MANAGEMENT_TYPE FOREIGN KEY (MANAGEMENT_ID) REFERENCES MANAGEMENT_TYPE(TYPE_ID)
);

INSERT INTO TO_DO_LIST_TYPE(TYPE_ID, ROLE_ID, OWNER_ROLE_ID, MANAGEMENT_ID) VALUES (1, 1, 4, 1);
INSERT INTO TO_DO_LIST_TYPE(TYPE_ID, ROLE_ID, OWNER_ROLE_ID, MANAGEMENT_ID) VALUES (2, 3, 2, 1);
INSERT INTO TO_DO_LIST_TYPE(TYPE_ID, ROLE_ID, OWNER_ROLE_ID, MANAGEMENT_ID) VALUES (3, 3, 2, 2);
INSERT INTO TO_DO_LIST_TYPE(TYPE_ID, ROLE_ID, OWNER_ROLE_ID, MANAGEMENT_ID) VALUES (4, 4, 2, 2);
INSERT INTO TO_DO_LIST_TYPE(TYPE_ID, ROLE_ID, OWNER_ROLE_ID, MANAGEMENT_ID) VALUES (5, 2, 2, 2);
INSERT INTO TO_DO_LIST_TYPE(TYPE_ID, ROLE_ID, OWNER_ROLE_ID, MANAGEMENT_ID) VALUES (6, 3, 3, 2);

CREATE TABLE ACTION_TYPE(
  ACTION_ID NUMBER,
  ACTION_NAME VARCHAR(20),
  CONSTRAINT PK_ACTION_TYPE PRIMARY KEY (ACTION_ID)
);

INSERT INTO ACTION_TYPE(ACTION_ID, ACTION_NAME) VALUES (1, 'Approve');
INSERT INTO ACTION_TYPE(ACTION_ID, ACTION_NAME) VALUES (2, 'Refuse');
INSERT INTO ACTION_TYPE(ACTION_ID, ACTION_NAME) VALUES (3, 'Enable');
INSERT INTO ACTION_TYPE(ACTION_ID, ACTION_NAME) VALUES (4, 'Disable');
INSERT INTO ACTION_TYPE(ACTION_ID, ACTION_NAME) VALUES (5, 'Process');
INSERT INTO ACTION_TYPE(ACTION_ID, ACTION_NAME) VALUES (6, 'Complete');
INSERT INTO ACTION_TYPE(ACTION_ID, ACTION_NAME) VALUES (7, 'Delete');

CREATE TABLE ACTION_MAPPING(
  MAPPING_ID NUMBER,
  TO_DO_LIST_TYPE_ID NUMBER,
  INITIAL_STATE_ID NUMBER,
  ACTION_ID NUMBER,
  REQUEST_URL VARCHAR(1024),
  NOTIFICATION_MASSAGE_PATERN VARCHAR(1024),
  CONSTRAINT PK_ACTION_MAPPING PRIMARY KEY (MAPPING_ID),
  CONSTRAINT FK_ACTION_MAPPING_TO_DO_LIST_TYPE FOREIGN KEY (TO_DO_LIST_TYPE_ID) REFERENCES TO_DO_LIST_TYPE(TYPE_ID),
  CONSTRAINT FK_ACTION_MAPPING_INITIAL_STATE_TYPE FOREIGN KEY (INITIAL_STATE_ID) REFERENCES INITIAL_STATE_TYPE(TYPE_ID),
  CONSTRAINT FK_ACTION_MAPPING_ACTION_TYPE FOREIGN KEY (ACTION_ID) REFERENCES ACTION_TYPE(ACTION_ID)
);

INSERT INTO ACTION_MAPPING(MAPPING_ID, TO_DO_LIST_TYPE_ID, INITIAL_STATE_ID, ACTION_ID, REQUEST_URL, NOTIFICATION_MASSAGE_PATERN) VALUES (1, 1, 1, 1, '', 'Supplier account <ACCOUNT> is approved.');
INSERT INTO ACTION_MAPPING(MAPPING_ID, TO_DO_LIST_TYPE_ID, INITIAL_STATE_ID, ACTION_ID, REQUEST_URL, NOTIFICATION_MASSAGE_PATERN) VALUES (2, 1, 1, 2, '', 'Supplier account <ACCOUNT> is refused.');
INSERT INTO ACTION_MAPPING(MAPPING_ID, TO_DO_LIST_TYPE_ID, INITIAL_STATE_ID, ACTION_ID, REQUEST_URL, NOTIFICATION_MASSAGE_PATERN) VALUES (3, 1, 4, 5, '', 'Supplier account <ACCOUNT> is disabled.');
INSERT INTO ACTION_MAPPING(MAPPING_ID, TO_DO_LIST_TYPE_ID, INITIAL_STATE_ID, ACTION_ID, REQUEST_URL, NOTIFICATION_MASSAGE_PATERN) VALUES (4, 1, 5, 4, '', 'Supplier account <ACCOUNT> is enabled.');
INSERT INTO ACTION_MAPPING(MAPPING_ID, TO_DO_LIST_TYPE_ID, INITIAL_STATE_ID, ACTION_ID, REQUEST_URL, NOTIFICATION_MASSAGE_PATERN) VALUES (5, 2, 1, 1, '', 'Requestor account <ACCOUNT> is approved.');
INSERT INTO ACTION_MAPPING(MAPPING_ID, TO_DO_LIST_TYPE_ID, INITIAL_STATE_ID, ACTION_ID, REQUEST_URL, NOTIFICATION_MASSAGE_PATERN) VALUES (6, 2, 1, 2, '', 'Requestor account <ACCOUNT> is refused.');
INSERT INTO ACTION_MAPPING(MAPPING_ID, TO_DO_LIST_TYPE_ID, INITIAL_STATE_ID, ACTION_ID, REQUEST_URL, NOTIFICATION_MASSAGE_PATERN) VALUES (7, 2, 4, 5, '', 'Requestor account <ACCOUNT> is disabled.');
INSERT INTO ACTION_MAPPING(MAPPING_ID, TO_DO_LIST_TYPE_ID, INITIAL_STATE_ID, ACTION_ID, REQUEST_URL, NOTIFICATION_MASSAGE_PATERN) VALUES (8, 2, 5, 4, '', 'Requestor account <ACCOUNT> is enabled.');
INSERT INTO ACTION_MAPPING(MAPPING_ID, TO_DO_LIST_TYPE_ID, INITIAL_STATE_ID, ACTION_ID, REQUEST_URL, NOTIFICATION_MASSAGE_PATERN) VALUES (9, 3, 1, 1, '', 'Your order <ORDER> is approved.');
INSERT INTO ACTION_MAPPING(MAPPING_ID, TO_DO_LIST_TYPE_ID, INITIAL_STATE_ID, ACTION_ID, REQUEST_URL, NOTIFICATION_MASSAGE_PATERN) VALUES (10, 3, 1, 2, '', 'Your order <ORDER> is refused.');
INSERT INTO ACTION_MAPPING(MAPPING_ID, TO_DO_LIST_TYPE_ID, INITIAL_STATE_ID, ACTION_ID, REQUEST_URL, NOTIFICATION_MASSAGE_PATERN) VALUES (11, 4, 2, 5, '', 'Your order <ORDER> is being processed.');
INSERT INTO ACTION_MAPPING(MAPPING_ID, TO_DO_LIST_TYPE_ID, INITIAL_STATE_ID, ACTION_ID, REQUEST_URL, NOTIFICATION_MASSAGE_PATERN) VALUES (12, 4, 6, 6, '', 'Your order <ORDER> is completed.');
INSERT INTO ACTION_MAPPING(MAPPING_ID, TO_DO_LIST_TYPE_ID, INITIAL_STATE_ID, ACTION_ID, REQUEST_URL, NOTIFICATION_MASSAGE_PATERN) VALUES (13, 5, 8, 7, '', 'Your order <ORDER> is deleted.');
INSERT INTO ACTION_MAPPING(MAPPING_ID, TO_DO_LIST_TYPE_ID, INITIAL_STATE_ID, ACTION_ID, REQUEST_URL, NOTIFICATION_MASSAGE_PATERN) VALUES (14, 5, 9, 7, '', 'Your order <ORDER> is deleted.');
INSERT INTO ACTION_MAPPING(MAPPING_ID, TO_DO_LIST_TYPE_ID, INITIAL_STATE_ID, ACTION_ID, REQUEST_URL, NOTIFICATION_MASSAGE_PATERN) VALUES (15, 6, 8, 7, '', 'Your order <ORDER> is deleted.');
INSERT INTO ACTION_MAPPING(MAPPING_ID, TO_DO_LIST_TYPE_ID, INITIAL_STATE_ID, ACTION_ID, REQUEST_URL, NOTIFICATION_MASSAGE_PATERN) VALUES (16, 6, 9, 7, '', 'Your order <ORDER> is deleted.');

CREATE TABLE TO_DO_LIST_ITEM(
  ITEM_ID NUMBER,
  TYPE_ID NUMBER,
  OWNER_ID NUMBER,
  ASSIGNEE_ID NUMBER,
  ORDER_ID NUMBER,
  CONSTRAINT PK_TO_DO_LIST_ITEM PRIMARY KEY (ITEM_ID),
  CONSTRAINT FK_TO_DO_LIST_ITEM_TO_DO_LIST_TYPE FOREIGN KEY (TYPE_ID) REFERENCES TO_DO_LIST_TYPE(TYPE_ID),
  CONSTRAINT FK_TO_DO_LIST_ITEM_OWNER FOREIGN KEY (OWNER_ID) REFERENCES USERS(USER_ID),
  CONSTRAINT FK_TO_DO_LIST_ITEM_ASSIGNEE FOREIGN KEY (ASSIGNEE_ID) REFERENCES USERS(USER_ID),
  CONSTRAINT FK_TO_DO_LIST_ITEM_ORDER FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID)
);

CREATE TABLE NOTIFICATION(
  NOTIFICATION_ID NUMBER,
  ACTION_MAPPING_ID NUMBER,
  RECEIVER_ID NUMBER,
  MESSAGE VARCHAR(200),
  CONSTRAINT PK_NOTIFICATION PRIMARY KEY (NOTIFICATION_ID),
  CONSTRAINT FK_NOTIFICATION_ACTION FOREIGN KEY (ACTION_MAPPING_ID) REFERENCES ACTION_MAPPING(MAPPING_ID),
  CONSTRAINT FK_NOTIFICATION_RECEIVER FOREIGN KEY (RECEIVER_ID) REFERENCES USERS(USER_ID)
);